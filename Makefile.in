LD = @LD@
AS = @NASM@
RUSTC = @RUSTC@

# FIXME
TGT_ARCH = x86_64

SRC_DIR = @srcdir@
ARCH_SRC_DIR = $(SRC_DIR)/arch/$(TGT_ARCH)/

RLIBC = $(SRC_DIR)/rlibc
RLIBC_SRC = $(RLIBC)/src/lib.rs
RLIBC_BIN = rlibc.a

QUASAR_KERNEL_ARCH_S_SOURCE = $(shell find $(ARCH_SRC_DIR) -name "*.s")
QUASAR_KERNEL_S_SOURCE = $(QUASAR_KERNEL_ARCH_S_SOURCE)
QUASAR_KERNEL_RUST_SOURCE = $(shell find $(SRC_DIR) -name "*.rs")
QUASAR_KERNEL_RUST_MAIN = $(SRC_DIR)/main.rs

QUASAR_KERNEL_RUST_BIN = kernel.a
QUASAR_KERNEL_OBJ = $(QUASAR_KERNEL_S_SOURCE:.s=.o)

QUASAR_MAIN_BIN = quasar.img

KERNEL_LINKER_FILE = $(ARCH_SRC_DIR)/linker.ld

ASFLAGS = -felf64
RUSTFLAGS = -O --target $(TGT_ARCH)-unknown-linux-gnu
MAIN_LDFLAGS = -z nodefaultlib -n --gc-sections

all: $(QUASAR_MAIN_BIN)

$(QUASAR_MAIN_BIN): $(QUASAR_KERNEL_OBJ) $(QUASAR_KERNEL_RUST_BIN) $(RLIBC_BIN)
	$(LD) $(MAIN_LDFLAGS) -T $(KERNEL_LINKER_FILE) -o $@ $^

%.o: %.s
	$(AS) $(ASFLAGS) -o $@ $^

$(QUASAR_KERNEL_RUST_BIN): $(QUASAR_KERNEL_RUST_SOURCE)
	$(RUSTC) $(RUSTFLAGS) --crate-type staticlib -o $@ $(QUASAR_KERNEL_RUST_MAIN)

$(RLIBC_BIN): $(RLIBC_SRC)
	$(RUSTC) $(RUSTFLAGS) --crate-type rlib -o $@ $^

clean:
	rm -f $(RLIBC_BIN)
	rm -f $(QUASAR_KERNEL_OBJ) $(QUASAR_KERNEL_RUST_BIN)
	rm -f $(QUASAR_MAIN_BIN)

ISO = quasar.iso
ISO_DIR = iso
BOOT_DIR = $(ISO_DIR)/boot
GRUB_DIR = $(BOOT_DIR)/grub
GRUB_CFG = $(GRUB_DIR)/grub.cfg

define GRUB_CONF
	set timeout=1
	set default=0
	menuentry "Quasar" {
    	multiboot2 /boot/quasar.img
	    boot
	}
endef

export GRUB_CONF

geniso: $(ISO)

$(ISO): $(GRUB_CFG) $(QUASAR_MAIN_BIN)
	cp -v $(QUASAR_MAIN_BIN) $(BOOT_DIR)
	grub-mkrescue -o $@ $(ISO_DIR)

$(GRUB_CFG): $(GRUB_DIR)
	@echo "$$GRUB_CONF" > $@

$(ISO_DIR):
	mkdir -pv $@

$(GRUB_DIR):
	mkdir -pv $@

run: geniso
	qemu-system-x86_64 $(ISO) -monitor stdio

clean-iso:
	rm -rf $(ISO_DIR) $(ISO)

distclean:
	rm -rf autom4te.cache config.log config.status Makefile

make clean-all: clean clean-iso distclean
